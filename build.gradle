plugins {
  id 'java'
  id 'war'
}

group 'com.banklab'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
  springVersion = '5.3.37'
  lombokVersion = '1.18.30'
  springSecurityVersion = '5.8.13'
  springBatchVersion = '4.3.9'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}


dependencies {
  // 스프링
  implementation("org.springframework:spring-context:${springVersion}")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation "org.springframework:spring-core:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  //
  implementation 'com.google.code.gson:gson:2.10.1'
  // RestTemplate
  implementation 'org.springframework:spring-web:5.3.30' // Spring 5 기준
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3' // JSON 파싱용


  // Spring 스케줄러
  implementation 'org.springframework:spring-context:5.3.30'

  implementation 'org.springframework.batch:spring-batch-core:4.3.10'  // 버전 확인 필수
  implementation 'org.springframework.batch:spring-batch-infrastructure:4.3.10'




  // 보안
  implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

  //Spring Security OAuth2
  implementation 'org.springframework.security:spring-security-oauth2-client:5.7.3'
  implementation 'org.springframework.security:spring-security-oauth2-jose:5.7.3'
  implementation 'org.springframework.security:spring-security-oauth2-core:5.7.3'


  // swagger
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  //jwt
  implementation("io.jsonwebtoken:jjwt-api:0.11.5")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
  implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

  implementation 'javax.annotation:javax.annotation-api:1.3.2'

  // Redis 연동
  implementation 'org.springframework.data:spring-data-redis:2.7.5'
  implementation 'io.lettuce:lettuce-core:6.1.8.RELEASE'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // JSP, SERVLET, JSTL
  implementation('javax.servlet:javax.servlet-api:4.0.1')
  compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  implementation 'javax.servlet:jstl:1.2'

  // Logging
//    implementation 'org.slf4j:slf4j-api:2.0.9'
//    runtimeOnly 'org.slf4j:jcl-over-slf4j:2.0.9'
//    runtimeOnly 'org.slf4j:slf4j-log4j12:2.0.9'
//    implementation 'log4j:log4j:1.2.17'

  // Log4j2
  implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
//    implementation 'org.slf4j:slf4j-api:2.0.13'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'


  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
  implementation 'org.apache.logging.log4j:log4j-api:2.0.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.0.1'


  // xml내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  // Lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // Jackson - Json 처리
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

  // 데이터베이스
  implementation 'com.mysql:mysql-connector-j:8.1.0'
  implementation 'com.zaxxer:HikariCP:2.7.4'

  implementation "org.springframework:spring-tx:${springVersion}"
  implementation "org.springframework:spring-jdbc:${springVersion}"

  implementation 'org.mybatis:mybatis:3.4.6'
  implementation 'org.mybatis:mybatis-spring:1.3.2'
  //batch
  implementation "org.springframework.batch:spring-batch-core:${springBatchVersion}"

  // build.gradle
  implementation 'com.fasterxml.jackson.core:jackson-databind'

  // HTTP Client for AI API calls
  implementation 'org.springframework:spring-web:5.3.37'

  // HTTP 클라이언트 (네이버 API 연동용)
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'

  // 스케줄링
  implementation("org.springframework:spring-context-support:${springVersion}")

  // 테스트
  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testImplementation "org.springframework.batch:spring-batch-test:${springBatchVersion}"
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  testImplementation 'org.assertj:assertj-core:3.24.2'
  testImplementation 'org.mockito:mockito-core:5.2.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

  // Hamcrest for MockMvc tests   // 테스트코드 관련
  testImplementation 'org.hamcrest:hamcrest:2.2'
  testImplementation 'org.hamcrest:hamcrest-library:2.2'

  testImplementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.18'
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}